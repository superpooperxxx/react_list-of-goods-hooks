{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortValue","isReversed","setIsReversed","visibleGoods","goods","ALPHABET","sort","goods1","goods2","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","cn","onClick","currentIsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAiCC,mBAASH,EAASI,MAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAWMC,EAxCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKL,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOE,cAAcD,MAC3D,MACF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOI,OAASH,EAAOG,UAajE,OAPIV,GACFE,EAAaS,UAIfC,QAAQC,IAAIf,EAAUE,GAEfE,EAgBcY,CACnBpB,EACA,CACEI,WACAE,eAIJ,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYnB,IAAaL,EAASW,WAGtCc,QAAS,kBAAMnB,EAAaN,EAASW,WARvC,iCAaA,wBACEY,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYnB,IAAaL,EAASgB,SAGtCS,QAAS,kBAAMnB,EAAaN,EAASgB,SARvC,4BAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAajB,IAGjBkB,QAtDc,WACpBjB,GAAc,SAAAkB,GAAiB,OAAKA,MA6ChC,sBAaErB,IAAaL,EAASI,MAAQG,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA3DU,WAClBjB,GAAc,GACdF,EAAaN,EAASI,OAsDhB,sBAUJ,oBAAIkB,UAAU,aAAd,SACGb,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OACRN,UAAU,mBAFZ,SAKIM,GAFGA,YCpIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a93fd399.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((goods1, goods2) => goods1.localeCompare(goods2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((goods1, goods2) => goods1.length - goods2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortValue] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleReverse = () => {\n    setIsReversed(currentIsReversed => !currentIsReversed);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortValue(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortType,\n      isReversed,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortValue(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortValue(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"goods-list\">\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            className=\"goods-list__item\"\n            key={good}\n          >\n            { good }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}